# This file is automatically generated from cmake.toml - DO NOT EDIT
# See https://github.com/build-cpp/cmkr for more information

# Create a configure-time dependency on cmake.toml to improve IDE support
if(CMKR_ROOT_PROJECT)
	configure_file(cmake.toml cmake.toml COPYONLY)
endif()

# Target ntdll
set(CMKR_TARGET ntdll)
set(ntdll_SOURCES "")

set(CMKR_SOURCES ${ntdll_SOURCES})
add_library(ntdll INTERFACE)

if(ntdll_SOURCES)
	target_sources(ntdll INTERFACE ${ntdll_SOURCES})
endif()

target_include_directories(ntdll INTERFACE
	${CMAKE_CURRENT_SOURCE_DIR}
)

target_link_libraries(ntdll INTERFACE
	ntdll.lib
)

unset(CMKR_TARGET)
unset(CMKR_SOURCES)
# Target MinHook
set(CMKR_TARGET MinHook)
set(MinHook_SOURCES "")

list(APPEND MinHook_SOURCES
	"MinHook/buffer.c"
	"MinHook/hde/hde32.c"
	"MinHook/hde/hde64.c"
	"MinHook/hook.c"
	"MinHook/trampoline.c"
	"MinHook/MinHook.h"
	"MinHook/buffer.h"
	"MinHook/hde/hde32.h"
	"MinHook/hde/hde64.h"
	"MinHook/hde/pstdint.h"
	"MinHook/hde/table32.h"
	"MinHook/hde/table64.h"
	"MinHook/trampoline.h"
)

list(APPEND MinHook_SOURCES
	cmake.toml
)

set(CMKR_SOURCES ${MinHook_SOURCES})
add_library(MinHook STATIC)

if(MinHook_SOURCES)
	target_sources(MinHook PRIVATE ${MinHook_SOURCES})
endif()

source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${MinHook_SOURCES})

target_include_directories(MinHook PUBLIC
	${CMAKE_CURRENT_SOURCE_DIR}
)

unset(CMKR_TARGET)
unset(CMKR_SOURCES)
# Target HookDll
set(CMKR_TARGET HookDll)
set(HookDll_SOURCES "")

list(APPEND HookDll_SOURCES
	"HookDll/HookDll.cpp"
	"HookDll/HookDll.hpp"
	"ntdll/ntdll.h"
)

if(CMAKE_SIZEOF_VOID_P EQUAL 8)
	list(APPEND HookDll_SOURCES
		"HookDll/x64/reentrancy.cpp"
	)
endif()

list(APPEND HookDll_SOURCES
	cmake.toml
)

set(CMKR_SOURCES ${HookDll_SOURCES})
add_library(HookDll STATIC)

if(HookDll_SOURCES)
	target_sources(HookDll PRIVATE ${HookDll_SOURCES})
endif()

source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${HookDll_SOURCES})

target_include_directories(HookDll PUBLIC
	HookDll
)

target_link_libraries(HookDll PUBLIC
	ntdll
	MinHook
)

unset(CMKR_TARGET)
unset(CMKR_SOURCES)
# Target AppInitDispatcher
set(CMKR_TARGET AppInitDispatcher)
set(AppInitDispatcher_SOURCES "")

list(APPEND AppInitDispatcher_SOURCES
	"AppInitDispatcher/AppInitDispatcher.cpp"
	"AppInitDispatcher/Utf8Ini.hpp"
)

list(APPEND AppInitDispatcher_SOURCES
	cmake.toml
)

set(CMKR_SOURCES ${AppInitDispatcher_SOURCES})
add_library(AppInitDispatcher SHARED)

if(AppInitDispatcher_SOURCES)
	target_sources(AppInitDispatcher PRIVATE ${AppInitDispatcher_SOURCES})
endif()

source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${AppInitDispatcher_SOURCES})

target_link_libraries(AppInitDispatcher PUBLIC
	HookDll
)

set_target_properties(AppInitDispatcher PROPERTIES
	EXCLUDE_FROM_DEFAULT_BUILD
		TRUE
)

unset(CMKR_TARGET)
unset(CMKR_SOURCES)
